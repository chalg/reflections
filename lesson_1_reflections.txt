How did viewing a diff between two versions of a file help you see the bug that
was introduced?


This made the job of finding the bug much more efficient. 


How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?


It can show old code that would have otherwise been deleted and might provide insights into new work.


What do you think are the pros and cons of manually choosing when to create a
 commit, like you do in Git, vs having versions automatically saved, like Google
docs does?


It would reduce some uneccessary saves and reduce complexity of reviewing those changes. 


Why do you think some version control systems, like Git, allow saving multiple 
files in one commit, while others, like Google Docs, treat each file separately?

Git allows you to link associated files, which makes sense to be saved at the same time. 


How can you use the commands git log and git diff to view the history of files?


Use git log to show a list of changes, then find the comment you are interested in and perform a diff on the id before and after that comment. 


How might using version control make you more confident to make changes that
 could break something?


You
 would be more confident because you could go back to what worked.

Now that you have your workspace set up, what do you want to try using Git for?


Saving versions of projects I'm working on.


Press q to quit diff



git config --global core.editor "'C:/Program Files/Sublime Text 3/sublime_text.exe' -n -w"
alias subl="C:/Program\ Files/Sublime\ Text\ 3/sublime_text.exe"
