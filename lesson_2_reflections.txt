What happens when you initialize a repository? Why do you need to do it?

We need to tell git that we want a group of files to be a repository.

How is the staging area different from the working directory and the repository?
 What value do you think it offers?


I think this is a similar concept to testing, where you can having a staging database as a step before the production database for testing.
How can you use the staging area to make sure you have one commit per logical
change?


Review the changes that are in the staging area before committing
What are some situations when branches would be helpful in keeping your history
 organized? How would branches help?


Branches would make it easier if you introduce major changes that are experimental in nature
How do the diagrams help you visualize the branch structure?


They make it easier to conceptualise what is happening.
What is the result of merging two branches together?
This merges the requested branches into the master branch so everyone is working on the master branch again.
Why do we represent it in
the diagram the way we do?


What are the pros and cons of Git’s automatic merging vs. always doing merges 
manually?

The pros of auto merging is that it is easy and requires no manual checking. The cons are that something may be merged that was not intended.
The pros of manual merging is possibly accuracy and peace of mind. The cons are that it takes longer and you need to interact with anyone else who was involved in making changes in one of the merged branches.
